apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "rclone.fullname" . }}
  labels:
    {{- include "rclone.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "rclone.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rclone.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rclone.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: rclone-data
          hostPath:
            path: {{ .Values.paths.data }}   
        - name: rclone-config
          configMap:
            name: rclone-config
            items:
              - key: rclone.conf
                path: rclone.conf
      initContainers:
        - name: umount-previous-mount
          image: rclone/rclone
          command: ["/bin/fusermount", "-u" ,"/data"]   
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              mountPropagation: Bidirectional
              name: rclone-data   
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:  [
             "mount",
             "gdrive-lavanda:","/data",
             "--config=/config/rclone/rclone.conf",
             "--allow-other",
             "--allow-non-empty",
             "--dir-cache-time", "4h",
             "--drive-chunk-size","64M",
             "--umask","002",
             "--vfs-cache-max-age","24h",
             "--vfs-read-chunk-size","128M",
             "--vfs-read-chunk-size-limit", "off",
             "--vfs-cache-mode","writes",
             "--vfs-cache-max-size","30G",
             "--cache-dir=/tmp/rclone",
             "--tpslimit=7"]
          lifecycle:
            preStop:
              exec:
                command: ["/bin/fusermount", "-u" ,"/data" ]
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              mountPropagation: Bidirectional
              name: rclone-data 
            - mountPath: /config/rclone
              name: rclone-config       
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
